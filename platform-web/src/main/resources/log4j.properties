log4j.rootLogger=debug, C, R, D
log4j.appender.C=org.apache.log4j.ConsoleAppender
# 表示值显示WARN级别以及其以上级别的日志信息,此外和 log4j.rootLogger的Level有关，
# 一般 Threshold的值要高于log4j.rootLogger的level的值。例如：log4j.rootLogger = ERROR，
# 而此值为 DEBUG，则其DEBUG的日志不显示 –>
log4j.appender.C.Threshold=INFO
log4j.appender.C.Target=System.out
log4j.appender.C.layout=org.apache.log4j.PatternLayout
log4j.appender.C.layout.ConversionPattern=%p [%d{yyyy-MM-dd HH:mm:ss,SSS}] %l %L [%t] %m%n

# 按日志大小产生相应的日志文件
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.Threshold=WARN
# 日志文件位置，以Tomcat为例，此处是指 tomcat/logs/ 目录，默认为tomcat/bin –>
log4j.appender.R.File=../logs/javaliu_platform.log
# 表示日志追加 –>
log4j.appender.R.Append=true
# 表示文件的最大值，后缀有KB、MB、GB –>
log4j.appender.R.MaxFileSize=100MB
# 表示当天文件的个数，达到此值之后就覆盖，例如，文件达到1KB之后，就会生成sys_log.log.1
# sys_log.log.2 … sys_log.log.8 –>
log4j.appender.R.MaxBackupIndex=8
log4j.appender.R.Encoding=UTF-8
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%p [%d{yyyy-MM-dd HH:mm:ss,SSS}] %l %L [%t] %m%n

# 每天一个日志文件
log4j.appender.D=org.apache.log4j.DailyRollingFileAppender 
log4j.appender.D.Threshold=WARN
log4j.appender.D.DatePattern='.'yyyy-MM-dd 
log4j.appender.D.File=../logs/javaliu_platform.log
log4j.appender.D.Append=true
log4j.appender.D.Encoding=UTF-8
log4j.appender.D.layout=org.apache.log4j.PatternLayout 
log4j.appender.D.layout.ConversionPattern=%p [%d{yyyy-MM-dd HH:mm:ss,SSS}] %l %L [%t] %m%n


